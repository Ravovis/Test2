import './polyfills.server.mjs';
import{$ as c,Ea as I,H as s,P as v,T as f,U as D,Ua as b,V as d,Va as x,W as r,Xa as M,aa as k,b as l,ba as y,h as g,ha as w,o as h}from"./chunk-3LKYKCQ5.mjs";import{a as o,b as u}from"./chunk-VVCT4QZE.mjs";var T=(a,p)=>p.route;function P(a,p){if(a&1&&(d(0,"li",4)(1,"a",5)(2,"span",6),c(3),r(),c(4),r()()),a&2){let e=p.$implicit;s(),v("routerLink",e.route),s(2),k(e.icon),s(),y(" ",e.label," ")}}var A=(()=>{class a{constructor(){this.navItems=[{label:"Dashboard",route:"/dashboard",icon:"\u{1F4CA}"},{label:"Tasks",route:"/tasks",icon:"\u{1F4CB}"},{label:"Users",route:"/users",icon:"\u{1F465}"}]}static{this.\u0275fac=function(t){return new(t||a)}}static{this.\u0275cmp=h({type:a,selectors:[["app-navigation"]],standalone:!0,features:[w],decls:8,vars:0,consts:[[1,"navbar"],[1,"nav-container"],[1,"nav-brand"],[1,"nav-menu"],[1,"nav-item"],["routerLinkActive","active",1,"nav-link",3,"routerLink"],[1,"nav-icon"]],template:function(t,i){t&1&&(d(0,"nav",0)(1,"div",1)(2,"div",2)(3,"h2"),c(4,"Team Task Manager"),r()(),d(5,"ul",3),f(6,P,5,3,"li",4,T),r()()()),t&2&&(s(6),D(i.navItems))},dependencies:[M,b,x,I],styles:[".navbar[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);color:#fff;padding:1rem 0;box-shadow:0 2px 10px #0000001a}.nav-container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:0 2rem;display:flex;justify-content:space-between;align-items:center}.nav-brand[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0;font-size:1.5rem;font-weight:600}.nav-menu[_ngcontent-%COMP%]{display:flex;list-style:none;margin:0;padding:0;gap:2rem}.nav-item[_ngcontent-%COMP%]{margin:0}.nav-link[_ngcontent-%COMP%]{color:#fff;text-decoration:none;padding:.5rem 1rem;border-radius:8px;transition:all .3s ease;display:flex;align-items:center;gap:.5rem;font-weight:500}.nav-link[_ngcontent-%COMP%]:hover{background-color:#ffffff1a;transform:translateY(-2px)}.nav-link.active[_ngcontent-%COMP%]{background-color:#fff3;font-weight:600}.nav-icon[_ngcontent-%COMP%]{font-size:1.2rem}@media (max-width: 768px){.nav-container[_ngcontent-%COMP%]{flex-direction:column;gap:1rem;padding:0 1rem}.nav-menu[_ngcontent-%COMP%]{gap:1rem}.nav-brand[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.25rem}}"]})}}return a})();var L=(()=>{class a{constructor(){this.tasks=[],this.taskHistory=[],this.activities=[],this.tasksSubject=new l(this.tasks),this.activitiesSubject=new l(this.activities),this.tasks$=this.tasksSubject.asObservable(),this.activities$=this.activitiesSubject.asObservable(),this.initializeSampleData()}initializeSampleData(){let e=[{id:"1",name:"John Developer",email:"john@company.com",role:"Developer"},{id:"2",name:"Sarah Designer",email:"sarah@company.com",role:"Designer"},{id:"3",name:"Mike QA",email:"mike@company.com",role:"QA"},{id:"4",name:"Lisa Manager",email:"lisa@company.com",role:"Manager"}],t=[{id:"1",title:"Setup project structure",description:"Initialize the project with proper folder structure and configuration",status:"To Do",priority:"High",assigneeId:"1",assigneeName:"John Developer",createdDate:new Date("2024-01-15"),updatedDate:new Date("2024-01-15"),createdBy:"4"},{id:"2",title:"Design login page mockup",description:"Create wireframes and mockups for the login page",status:"In Progress",priority:"Medium",assigneeId:"2",assigneeName:"Sarah Designer",createdDate:new Date("2024-01-16"),updatedDate:new Date("2024-01-18"),createdBy:"4"},{id:"3",title:"Write user authentication tests",description:"Create comprehensive test suite for user authentication",status:"To Do",priority:"High",assigneeId:"3",assigneeName:"Mike QA",createdDate:new Date("2024-01-17"),updatedDate:new Date("2024-01-17"),createdBy:"1"},{id:"4",title:"Review sprint planning",description:"Review and approve the upcoming sprint planning",status:"Done",priority:"Low",assigneeId:"4",assigneeName:"Lisa Manager",createdDate:new Date("2024-01-10"),updatedDate:new Date("2024-01-12"),createdBy:"4"},{id:"5",title:"Implement user registration API",description:"Create REST API endpoints for user registration",status:"In Progress",priority:"High",assigneeId:"1",assigneeName:"John Developer",createdDate:new Date("2024-01-18"),updatedDate:new Date("2024-01-19"),createdBy:"4"},{id:"6",title:"Create color palette and typography guide",description:"Establish design system with colors and typography",status:"Done",priority:"Medium",assigneeId:"2",assigneeName:"Sarah Designer",createdDate:new Date("2024-01-14"),updatedDate:new Date("2024-01-16"),createdBy:"4"},{id:"7",title:"Setup automated testing pipeline",description:"Configure CI/CD pipeline with automated testing",status:"To Do",priority:"Medium",assigneeId:"3",assigneeName:"Mike QA",createdDate:new Date("2024-01-19"),updatedDate:new Date("2024-01-19"),createdBy:"1"},{id:"8",title:"Prepare quarterly review presentation",description:"Create presentation for quarterly business review",status:"In Progress",priority:"Low",assigneeId:"4",assigneeName:"Lisa Manager",createdDate:new Date("2024-01-20"),updatedDate:new Date("2024-01-21"),createdBy:"4"}];this.tasks=t,this.tasksSubject.next(this.tasks),this.initializeActivities()}initializeActivities(){let e=[];this.tasks.forEach(t=>{e.push({id:`activity-${t.id}-created`,taskId:t.id,taskTitle:t.title,action:"created",userId:t.createdBy,userName:this.getUserNameById(t.createdBy),timestamp:t.createdDate}),t.updatedDate.getTime()!==t.createdDate.getTime()&&e.push({id:`activity-${t.id}-updated`,taskId:t.id,taskTitle:t.title,action:"updated",userId:t.createdBy,userName:this.getUserNameById(t.createdBy),timestamp:t.updatedDate})}),e.sort((t,i)=>i.timestamp.getTime()-t.timestamp.getTime()),this.activities=e,this.activitiesSubject.next(this.activities)}getUserNameById(e){return[{id:"1",name:"John Developer"},{id:"2",name:"Sarah Designer"},{id:"3",name:"Mike QA"},{id:"4",name:"Lisa Manager"}].find(i=>i.id===e)?.name||"Unknown User"}getAllTasks(){return this.tasks$}getTaskById(e){return this.tasks.find(t=>t.id===e)}createTask(e,t){let i={id:this.generateId(),title:e.title,description:e.description,status:"To Do",priority:e.priority,assigneeId:e.assigneeId,assigneeName:this.getUserNameById(e.assigneeId),dueDate:e.dueDate,createdDate:new Date,updatedDate:new Date,createdBy:t};return this.tasks.push(i),this.tasksSubject.next(this.tasks),this.addActivity(i.id,i.title,"created",t),i}updateTask(e,t,i){let n=this.tasks.findIndex(C=>C.id===e);if(n===-1)return null;let m=o({},this.tasks[n]);return this.tasks[n]=u(o(o({},this.tasks[n]),t),{updatedDate:new Date}),this.tasksSubject.next(this.tasks),this.addActivity(this.tasks[n].id,this.tasks[n].title,"updated",i),this.tasks[n]}deleteTask(e){let t=this.tasks.findIndex(i=>i.id===e);return t===-1?!1:(this.tasks.splice(t,1),this.tasksSubject.next(this.tasks),this.activities=this.activities.filter(i=>i.taskId!==e),this.activitiesSubject.next(this.activities),!0)}getTasksByStatus(e){return e==="All"?this.tasks:this.tasks.filter(t=>t.status===e)}searchTasks(e){return e.length<3?this.tasks:this.tasks.filter(t=>t.title.toLowerCase().includes(e.toLowerCase()))}getRecentActivities(e=5){return this.activities.slice(0,e)}getTaskStatistics(){return{total:this.tasks.length,completed:this.tasks.filter(e=>e.status==="Done").length,inProgress:this.tasks.filter(e=>e.status==="In Progress").length}}addActivity(e,t,i,n){let m={id:this.generateId(),taskId:e,taskTitle:t,action:i,userId:n,userName:this.getUserNameById(n),timestamp:new Date};this.activities.unshift(m),this.activitiesSubject.next(this.activities)}generateId(){return Date.now().toString()+Math.random().toString(36).substr(2,9)}static{this.\u0275fac=function(t){return new(t||a)}}static{this.\u0275prov=g({token:a,factory:a.\u0275fac,providedIn:"root"})}}return a})();export{A as a,L as b};
